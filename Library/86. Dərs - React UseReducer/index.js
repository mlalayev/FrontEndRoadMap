//* useReducer nÉ™dir?

//? `useReducer` â€“ React komponentindÉ™ **daha kompleks state idarÉ™etmÉ™si** Ã¼Ã§Ã¼n istifadÉ™ olunan hook-dur.
//? Bu hook `useState`-É™ alternativdir vÉ™ É™sasÉ™n **bir neÃ§É™ É™laqÉ™li dÉ™yÉ™ri** vÉ™ ya **daha mÃ¼rÉ™kkÉ™b dÉ™yiÅŸikliklÉ™ri** idarÉ™ etmÉ™k Ã¼Ã§Ã¼n uyÄŸundur.

//? `useReducer` ideyasÄ± â€“ dÉ™yiÅŸikliklÉ™ri bir funksiya (reducer) vasitÉ™silÉ™ idarÉ™ etmÉ™kdir
//? Biz bir **action** gÃ¶ndÉ™ririk vÉ™ reducer funksiyasÄ± yeni state-i qaytarÄ±r

//* Sintaksis:
const [state, dispatch] = useReducer(reducer, ilkinDÉ™yÉ™r);

//? `state` â€“ cari vÉ™ziyyÉ™ti saxlayÄ±r
//? `dispatch` â€“ dÉ™yiÅŸiklik gÃ¶ndÉ™rmÉ™k Ã¼Ã§Ã¼n funksiyadÄ±r
//? `reducer` â€“ action-a É™sasÉ™n yeni state qaytaran funksiyadÄ±r

//* SadÉ™ NÃ¼munÉ™: SayÄŸac

import { useReducer } from "react";

//* Reducer funksiyasÄ± â€“ É™vvÉ™lki state vÉ™ gÉ™lÉ™n action-u qÉ™bul edir
function reducer(state, action) {
  switch (action.type) {
    case "ARTIR":
      return { say: state.say + 1 };
    case "AZALT":
      return { say: state.say - 1 };
    case "SIFIRLA":
      return { say: 0 };
    default:
      return state;
  }
}

//* Komponent
function Counter() {
  const [state, dispatch] = useReducer(reducer, { say: 0 });

  return (
    <div>
      <h2>Say: {state.say}</h2>
      <button onClick={() => dispatch({ type: "ARTIR" })}>ArtÄ±r</button>
      <button onClick={() => dispatch({ type: "AZALT" })}>Azalt</button>
      <button onClick={() => dispatch({ type: "SIFIRLA" })}>SÄ±fÄ±rla</button>
    </div>
  );
}

//? Bu nÃ¼munÉ™dÉ™:
//? - `dispatch` funksiyasÄ± vasitÉ™silÉ™ bir action gÃ¶ndÉ™rilir
//? - `reducer` funksiyasÄ± hÉ™min action-u iÅŸlÉ™yir vÉ™ yeni state-i qaytarÄ±r
//? - React yeni state ilÉ™ komponenti yenidÉ™n render edir

//* useState ilÉ™ fÉ™rqlÉ™ri:

//? ğŸ”¹ useState â€“ sadÉ™ vÉ™ziyyÉ™tlÉ™r Ã¼Ã§Ã¼n
//? ğŸ”¹ useReducer â€“ É™laqÉ™li vÉ™ ya ardÄ±cÄ±l dÉ™yiÅŸikliklÉ™r Ã¼Ã§Ã¼n daha uyÄŸun
//? ğŸ”¹ useReducer ilÉ™ daha **strukturlaÅŸdÄ±rÄ±lmÄ±ÅŸ**, **aydÄ±n**, vÉ™ **kontrollu** state idarÉ™si mÃ¼mkÃ¼ndÃ¼r

//* NÉ™ vaxt useReducer istifadÉ™ etmÉ™li?

//? - Bir neÃ§É™ state dÉ™yÉ™ri bir-biri ilÉ™ É™laqÉ™lidirsÉ™
//? - State dÉ™yiÅŸmÉ™lÉ™ri Ã§oxdursa (mÉ™sÉ™lÉ™n, form dÉ™yiÅŸikliklÉ™ri, Ã§oxlu action-lar)
//? - State dÉ™yiÅŸmÉ™ qaydalarÄ± daha kompleksdirsÉ™ vÉ™ kodun aydÄ±n qalmasÄ± vacibdirsÉ™

//* QÄ±sa izah:
//? useReducer â€“ sadÉ™cÉ™ `state`-i dÉ™yiÅŸmÉ™k yox, onu **nÉ™ etdiyini izah edÉ™n action-larla** idarÉ™ etmÉ™k Ã¼Ã§Ã¼ndÃ¼r
//? Bu yanaÅŸma daha sabit vÉ™ oxunaqlÄ± kod yazmaÄŸa kÃ¶mÉ™k edir
